/**
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements.  See the NOTICE file distributed with
 *   this work for additional information regarding copyright ownership.
 *   The ASF licenses this file to you under the Apache License, Version 2.0
 *   (the "License"); you may not use this file except in compliance with
 *   the License.  You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 */
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.1.4-b02-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.07.07 at 04:32:17 PM MSD 
//


package com.aplana.dmsi.types;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.aplana.dmsi.types package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.aplana.dmsi.types
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link OutNumber }
     * 
     */
    public OutNumber createOutNumber() {
        return new OutNumber();
    }

    /**
     * Create an instance of {@link RegNumber }
     * 
     */
    public RegNumber createRegNumber() {
        return new RegNumber();
    }

    /**
     * Create an instance of {@link TaskNumber }
     * 
     */
    public TaskNumber createTaskNumber() {
        return new TaskNumber();
    }

    /**
     * Create an instance of {@link ExpansionType }
     * 
     */
    public ExpansionType createExpansionType() {
        return new ExpansionType();
    }

    /**
     * Create an instance of {@link Executor }
     * 
     */
    public Executor createExecutor() {
        return new Executor();
    }

    /**
     * Create an instance of {@link PrivatePerson }
     * 
     */
    public PrivatePerson createPrivatePerson() {
        return new PrivatePerson();
    }

    /**
     * Create an instance of {@link Validator }
     * 
     */
    public Validator createValidator() {
        return new Validator();
    }

    /**
     * Create an instance of {@link Confident }
     * 
     */
    public Confident createConfident() {
        return new Confident();
    }

    /**
     * Create an instance of {@link DocTransfer }
     * 
     */
    public DocTransfer createDocTransfer() {
        return new DocTransfer();
    }

    /**
     * Create an instance of {@link DocumentType }
     * 
     */
    public DocumentType createDocumentType() {
        return new DocumentType();
    }

    /**
     * Create an instance of {@link TaskListType }
     * 
     */
    public TaskListType createTaskListType() {
        return new TaskListType();
    }

    /**
     * Create an instance of {@link Rank }
     * 
     */
    public Rank createRank() {
        return new Rank();
    }

    /**
     * Create an instance of {@link AcknowledgementType }
     * 
     */
    public AcknowledgementType createAcknowledgementType() {
        return new AcknowledgementType();
    }

    /**
     * Create an instance of {@link AckResult }
     * 
     */
    public AckResult createAckResult() {
        return new AckResult();
    }

    /**
     * Create an instance of {@link Econtact }
     * 
     */
    public Econtact createEcontact() {
        return new Econtact();
    }

    /**
     * Create an instance of {@link Official }
     * 
     */
    public Official createOfficial() {
        return new Official();
    }

    /**
     * Create an instance of {@link Name }
     * 
     */
    public Name createName() {
        return new Name();
    }

    /**
     * Create an instance of {@link OrganizationWithSign }
     * 
     */
    public OrganizationWithSign createOrganizationWithSign() {
        return new OrganizationWithSign();
    }

    /**
     * Create an instance of {@link Organization }
     * 
     */
    public Organization createOrganization() {
        return new Organization();
    }

    /**
     * Create an instance of {@link OfficialPersonWithSign }
     * 
     */
    public OfficialPersonWithSign createOfficialPersonWithSign() {
        return new OfficialPersonWithSign();
    }

    /**
     * Create an instance of {@link Author }
     * 
     */
    public Author createAuthor() {
        return new Author();
    }

    /**
     * Create an instance of {@link AuthorOrganization }
     * 
     */
    public AuthorOrganization createAuthorOrganization() {
        return new AuthorOrganization();
    }

    /**
     * Create an instance of {@link Writer }
     * 
     */
    public Writer createWriter() {
        return new Writer();
    }

    /**
     * Create an instance of {@link Note }
     * 
     */
    public Note createNote() {
        return new Note();
    }

    /**
     * Create an instance of {@link Addressee }
     * 
     */
    public Addressee createAddressee() {
        return new Addressee();
    }

    /**
     * Create an instance of {@link OrganizationOnly }
     * 
     */
    public OrganizationOnly createOrganizationOnly() {
        return new OrganizationOnly();
    }

    /**
     * Create an instance of {@link Address }
     * 
     */
    public Address createAddress() {
        return new Address();
    }

    /**
     * Create an instance of {@link Header }
     * 
     */
    public Header createHeader() {
        return new Header();
    }

    /**
     * Create an instance of {@link OfficialPerson }
     * 
     */
    public OfficialPerson createOfficialPerson() {
        return new OfficialPerson();
    }

    /**
     * Create an instance of {@link RegHistory }
     * 
     */
    public RegHistory createRegHistory() {
        return new RegHistory();
    }

    /**
     * Create an instance of {@link Task }
     * 
     */
    public Task createTaskListTypeTask() {
        return new Task();
    }

    /**
     * Create an instance of {@link Referred }
     * 
     */
    public Referred createReferred() {
        return new Referred();
    }

    /**
     * Create an instance of {@link SignDate }
     * 
     */
    public SignDate createSignDate() {
        return new SignDate();
    }

    /**
     * Create an instance of {@link AddDocumentsType.Folder }
     * 
     */
    public AddDocumentsType.Folder createAddDocumentsTypeFolder() {
        return new AddDocumentsType.Folder();
    }

    /**
     * Create an instance of {@link DocNumber }
     * 
     */
    public DocNumber createDocNumber() {
        return new DocNumber();
    }

    /**
     * Create an instance of {@link AddDocumentsType }
     * 
     */
    public AddDocumentsType createAddDocumentsType() {
        return new AddDocumentsType();
    }

    /**
     * Create an instance of {@link PrivatePersonWithSign }
     * 
     */
    public PrivatePersonWithSign createPrivatePersonWithSign() {
        return new PrivatePersonWithSign();
    }

}
