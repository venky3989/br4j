/**
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements.  See the NOTICE file distributed with
 *   this work for additional information regarding copyright ownership.
 *   The ASF licenses this file to you under the Apache License, Version 2.0
 *   (the "License"); you may not use this file except in compliance with
 *   the License.  You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 */
apply plugin: 'groovy'
compileJava.options.encoding = 'UTF-8'

defaultTasks 'makeArtifact'

sourceCompatibility = 1.5
version = '1.0'

repositories {
    mavenCentral()
}

dependencies {
    compile fileTree(dir: 'lib', include: '*.jar')
    compile 'org.codehaus.groovy:groovy-all:2.2.2'
    compile 'commons-cli:commons-cli:1.2'
    compile 'org.apache.ant:ant:1.9.2'
    compile 'org.apache.ant:ant-launcher:1.9.2'

    testCompile 'org.jmockit:jmockit:1.16'
    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-core:1.3'
}

jar {
    archiveName = "iuh.jar"
    manifest {
        attributes 'Implementation-Title': 'IUH',
                'Implementation-Version': version,
                'Class-Path': 'lib/clipc.jar lib/postgresql-9.3-1101.jdbc4.jar lib/log4j.jar lib/DynamicAccessRule.jar'
    }
}

test {
    testLogging.showStandardStreams = true
}

task cleanLogDir(type: Delete) {
    delete fileTree(dir: "log")
}
testClasses.finalizedBy cleanLogDir

task makeArtifact(dependsOn: build) << {
    copy {
        from files('iuh.properties', 'answer.properties', 'starter.sh', 'starter.bat', 'log4j.groovy', 'readme.txt', 'parametersList.txt')
        from fileTree(dir: 'build/libs')
        into "${iuhArtifactDir}"
    }
    copy {
        from "lib"
        exclude "groovy-all*"
        into "${iuhArtifactDir}/lib"
    }
}